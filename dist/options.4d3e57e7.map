{"version":3,"sources":["utils.js","options.js"],"names":["makeExtensionLogger","ext","mod","log","args","console","apply","undefined","join","err","onError","e","makeLogger","bind","makeGetHostname","parser","document","createElement","getHostname","url","href","hostname","noop","xor","arr","val","arrClone","slice","index","indexOf","splice","concat","getActiveTabDomain","Promise","resolve","browser","tabs","query","active","currentWindow","windowType","map","tab","util","saveOptions","preventDefault","storage","sync","set","userblocklist","querySelector","value","then","blocked","runtime","reload","restoreOptions","get","setBlocklist","result","addEventListener"],"mappings":"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","file":"options.4d3e57e7.map","sourceRoot":"..","sourcesContent":["const makeExtensionLogger = (ext = '', mod = '') => {\n  const log = (...args) =>\n    console.log.apply(undefined, [[ext, mod].join('-'), ...args]);\n  const err = (...args) => log(`Error: `, args);\n  const onError = e => err(e);\n\n  return {\n    log,\n    err,\n    onError\n  };\n};\n\nexport const makeLogger = makeExtensionLogger.bind(undefined, 'DDG');\n\nconst makeGetHostname = () => {\n  let parser = document.createElement('a');\n  const getHostname = url => {\n    parser.href = url;\n    return parser.hostname;\n  };\n  return getHostname;\n};\n\nexport const getHostname = makeGetHostname();\n\nexport const noop = () => undefined;\n\nexport const xor = (arr, val) => {\n  const arrClone = arr.slice(0);\n  const index = arrClone.indexOf(val);\n  if (index >= 0) {\n    arrClone.splice(index, 1);\n    return arrClone;\n  }\n  return arrClone.concat([val]);\n};\n\nexport function getActiveTabDomain() {\n  return new Promise(resolve => {\n    browser.tabs.query(\n      {\n        active: true,\n        currentWindow: true,\n        windowType: 'normal'\n      },\n      tabs => {\n        const [url] = tabs.map(tab => tab.url);\n        resolve(getHostname(url));\n      }\n    );\n  });\n}\n\nconst util = {\n  xor,\n  noop,\n  makeLogger,\n  getHostname,\n  getActiveTabDomain\n};\n\nexport { util as default };\n","import { makeLogger } from './utils';\nconst { onError } = makeLogger('OPT');\n\nfunction saveOptions(e) {\n  e.preventDefault();\n  browser.storage.sync\n    .set({\n      userblocklist: document.querySelector('#user-blocklist').value\n    })\n    .then(() => {\n      browser.storage.sync.set({ blocked: {} }).then(() => {\n        browser.runtime.reload();\n      });\n    });\n}\n\nfunction restoreOptions() {\n  function setBlocklist(result) {\n    document.querySelector('#user-blocklist').value =\n      result.userblocklist || '';\n  }\n\n  browser.storage.sync.get('userblocklist').then(setBlocklist, onError);\n}\n\ndocument.addEventListener('DOMContentLoaded', restoreOptions);\ndocument.querySelector('form').addEventListener('submit', saveOptions);\n"]}